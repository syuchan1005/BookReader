/* This file generated by @graphql-codegen */
import { DocumentNode } from 'graphql';
import * as Apollo from '@apollo/client';
export type Maybe<T> = T | null;
export type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] };
export type MakeOptional<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]?: Maybe<T[SubKey]> };
export type MakeMaybe<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]: Maybe<T[SubKey]> };
export type BigInt = number;
export type IntRange = (number | [number, number])[];
export type Upload = File;
const defaultOptions =  {}
/** All built-in and custom scalars, mapped to their actual values */
export type Scalars = {
  ID: string;
  String: string;
  Boolean: boolean;
  Int: number;
  Float: number;
  BigInt: BigInt;
  IntRange: IntRange;
  Upload: Upload;
};


export type Book = {
  __typename?: 'Book';
  id: Scalars['ID'];
  thumbnail?: Maybe<Scalars['Int']>;
  number: Scalars['String'];
  pages: Scalars['Int'];
  updatedAt: Scalars['String'];
  info?: Maybe<BookInfo>;
};

export type BookInfo = {
  __typename?: 'BookInfo';
  id: Scalars['ID'];
  name: Scalars['String'];
  thumbnail?: Maybe<BookInfoThumbnail>;
  count: Scalars['Int'];
  history: Scalars['Boolean'];
  genres: Array<Genre>;
  updatedAt: Scalars['String'];
  books: Array<Book>;
};


export type BookInfoBooksArgs = {
  order?: Maybe<BookOrder>;
};

export type BookInfoEdge = {
  __typename?: 'BookInfoEdge';
  cursor: Scalars['String'];
  node: BookInfo;
};

export type BookInfoHistory = {
  name: Scalars['String'];
  count: Scalars['Int'];
};

export type BookInfoList = {
  __typename?: 'BookInfoList';
  hasNext: Scalars['Boolean'];
  infos: Array<BookInfo>;
};

export enum BookInfoOrder {
  UpdateNewest = 'Update_Newest',
  UpdateOldest = 'Update_Oldest',
  AddNewest = 'Add_Newest',
  AddOldest = 'Add_Oldest',
  NameAsc = 'Name_Asc',
  NameDesc = 'Name_Desc'
}

export type BookInfoPartialList = {
  __typename?: 'BookInfoPartialList';
  pageInfo: PageInfo;
  edges: Array<BookInfoEdge>;
};

export type BookInfoResult = {
  __typename?: 'BookInfoResult';
  success: Scalars['Boolean'];
  code?: Maybe<Scalars['String']>;
  message?: Maybe<Scalars['String']>;
  books: Array<Book>;
};

export type BookInfoThumbnail = {
  __typename?: 'BookInfoThumbnail';
  bookId: Scalars['ID'];
  pageIndex: Scalars['Int'];
  bookPageCount: Scalars['Int'];
};

export type BookInfosOption = {
  search?: Maybe<Scalars['String']>;
  genres?: Maybe<Array<Scalars['String']>>;
  history?: Maybe<HistoryType>;
  order?: Maybe<BookInfoOrder>;
};

export enum BookOrder {
  UpdateNewest = 'Update_Newest',
  UpdateOldest = 'Update_Oldest',
  NumberAsc = 'Number_Asc',
  NumberDesc = 'Number_Desc'
}

export type CommonPluginQuery = {
  __typename?: 'CommonPluginQuery';
  name: Scalars['String'];
  args: Array<Scalars['String']>;
  subscription?: Maybe<Scalars['Boolean']>;
};

export type CropEditAction = {
  pageRange: Scalars['IntRange'];
  left?: Maybe<Scalars['Int']>;
  right?: Maybe<Scalars['Int']>;
  top?: Maybe<Scalars['Int']>;
  bottom?: Maybe<Scalars['Int']>;
};

export type Debug_FolderSizes = {
  __typename?: 'Debug_FolderSizes';
  tmp: Scalars['BigInt'];
  cache: Scalars['BigInt'];
  book: Scalars['BigInt'];
  unusedBook: Scalars['BigInt'];
  bookInfoCount: Scalars['Int'];
  bookCount: Scalars['Int'];
};

export type DeleteEditAction = {
  pageRange: Scalars['IntRange'];
};

export type EditAction = {
  editType: EditType;
  crop?: Maybe<CropEditAction>;
  replace?: Maybe<UploadEditAction>;
  delete?: Maybe<DeleteEditAction>;
  put?: Maybe<UploadEditAction>;
  split?: Maybe<SplitEditAction>;
};

export enum EditType {
  Crop = 'Crop',
  Replace = 'Replace',
  Delete = 'Delete',
  Put = 'Put',
  Split = 'Split'
}

export type Genre = {
  __typename?: 'Genre';
  id: Scalars['Int'];
  name: Scalars['String'];
  invisible: Scalars['Boolean'];
};

export enum HistoryType {
  All = 'ALL',
  HisotryOnly = 'HISOTRY_ONLY',
  NormalOnly = 'NORMAL_ONLY'
}

export type InputBook = {
  number: Scalars['String'];
  file?: Maybe<Scalars['Upload']>;
  path?: Maybe<Scalars['String']>;
};


export type Mutation = {
  __typename?: 'Mutation';
  addBookInfo: ResultWithInfoId;
  editBookInfo: Result;
  deleteBookInfo: BookInfoResult;
  addBookInfoHistories: Result;
  addBooks: Array<Result>;
  addCompressBook: ResultWithBookResults;
  editBook: Result;
  deleteBook: Result;
  deleteBooks: Result;
  moveBooks: Result;
  bulkEditPage: Result;
  debug_deleteUnusedFolders: Result;
  deleteGenre: Result;
  editGenre: Result;
};


export type MutationAddBookInfoArgs = {
  name: Scalars['String'];
  genres?: Maybe<Array<Scalars['String']>>;
};


export type MutationEditBookInfoArgs = {
  id: Scalars['ID'];
  name?: Maybe<Scalars['String']>;
  thumbnail?: Maybe<Scalars['ID']>;
  genres?: Maybe<Array<Scalars['String']>>;
};


export type MutationDeleteBookInfoArgs = {
  id: Scalars['ID'];
};


export type MutationAddBookInfoHistoriesArgs = {
  histories: Array<BookInfoHistory>;
};


export type MutationAddBooksArgs = {
  id: Scalars['ID'];
  books: Array<InputBook>;
};


export type MutationAddCompressBookArgs = {
  id: Scalars['ID'];
  file?: Maybe<Scalars['Upload']>;
  path?: Maybe<Scalars['String']>;
};


export type MutationEditBookArgs = {
  id: Scalars['ID'];
  number?: Maybe<Scalars['String']>;
  thumbnail?: Maybe<Scalars['Int']>;
};


export type MutationDeleteBookArgs = {
  id: Scalars['ID'];
};


export type MutationDeleteBooksArgs = {
  infoId: Scalars['ID'];
  ids: Array<Scalars['ID']>;
};


export type MutationMoveBooksArgs = {
  infoId: Scalars['ID'];
  ids: Array<Scalars['ID']>;
};


export type MutationBulkEditPageArgs = {
  id: Scalars['ID'];
  actions: Array<EditAction>;
};


export type MutationDeleteGenreArgs = {
  genre: Scalars['String'];
};


export type MutationEditGenreArgs = {
  oldName: Scalars['String'];
  newName?: Maybe<Scalars['String']>;
  invisible?: Maybe<Scalars['Boolean']>;
};

export type PageInfo = {
  __typename?: 'PageInfo';
  hasNextPage: Scalars['Boolean'];
  hasPreviousPage: Scalars['Boolean'];
  startCursor: Scalars['String'];
  endCursor: Scalars['String'];
};

export type Plugin = {
  __typename?: 'Plugin';
  info: PluginInfo;
  queries: PluginQueries;
};

export type PluginInfo = {
  __typename?: 'PluginInfo';
  name: Scalars['String'];
  version: Scalars['String'];
};

export type PluginQueries = {
  __typename?: 'PluginQueries';
  add: CommonPluginQuery;
};

export type Query = {
  __typename?: 'Query';
  relayBookInfos: BookInfoPartialList;
  bookInfo?: Maybe<BookInfo>;
  book?: Maybe<Book>;
  debug_folderSize: Debug_FolderSizes;
  plugins: Array<Plugin>;
  genres: Array<Genre>;
};


export type QueryRelayBookInfosArgs = {
  first?: Maybe<Scalars['Int']>;
  after?: Maybe<Scalars['String']>;
  last?: Maybe<Scalars['Int']>;
  before?: Maybe<Scalars['String']>;
  option?: Maybe<BookInfosOption>;
};


export type QueryBookInfoArgs = {
  id: Scalars['ID'];
};


export type QueryBookArgs = {
  id: Scalars['ID'];
};

export type Result = {
  __typename?: 'Result';
  success: Scalars['Boolean'];
  code?: Maybe<Scalars['String']>;
  message?: Maybe<Scalars['String']>;
};

export type ResultWithBookResults = {
  __typename?: 'ResultWithBookResults';
  success: Scalars['Boolean'];
  code?: Maybe<Scalars['String']>;
  message?: Maybe<Scalars['String']>;
  bookResults?: Maybe<Array<Result>>;
};

export type ResultWithInfoId = {
  __typename?: 'ResultWithInfoId';
  success: Scalars['Boolean'];
  code?: Maybe<Scalars['String']>;
  message?: Maybe<Scalars['String']>;
  infoId?: Maybe<Scalars['ID']>;
};

export type SplitEditAction = {
  pageRange: Scalars['IntRange'];
  splitType: SplitType;
  splitCount?: Maybe<Scalars['Int']>;
};

export enum SplitType {
  Vertical = 'VERTICAL',
  Horizontal = 'HORIZONTAL'
}

export type Subscription = {
  __typename?: 'Subscription';
  addBooks: Scalars['String'];
};


export type SubscriptionAddBooksArgs = {
  id: Scalars['ID'];
};


export type UploadEditAction = {
  pageIndex: Scalars['Int'];
  image: Scalars['Upload'];
};

export type AddBooksMutationVariables = Exact<{
  id: Scalars['ID'];
  books: Array<InputBook> | InputBook;
}>;


export type AddBooksMutation = (
  { __typename?: 'Mutation' }
  & { adds: Array<(
    { __typename?: 'Result' }
    & Pick<Result, 'success' | 'code'>
  )> }
);

export type AddBooksProgressSubscriptionVariables = Exact<{
  id: Scalars['ID'];
}>;


export type AddBooksProgressSubscription = (
  { __typename?: 'Subscription' }
  & Pick<Subscription, 'addBooks'>
);

export type AddCompressBookMutationVariables = Exact<{
  id: Scalars['ID'];
  file?: Maybe<Scalars['Upload']>;
  path?: Maybe<Scalars['String']>;
}>;


export type AddCompressBookMutation = (
  { __typename?: 'Mutation' }
  & { add: (
    { __typename?: 'ResultWithBookResults' }
    & Pick<ResultWithBookResults, 'success' | 'code'>
  ) }
);

export type PluginsQueryVariables = Exact<{ [key: string]: never; }>;


export type PluginsQuery = (
  { __typename?: 'Query' }
  & { plugins: Array<(
    { __typename?: 'Plugin' }
    & { info: (
      { __typename?: 'PluginInfo' }
      & Pick<PluginInfo, 'name'>
    ), queries: (
      { __typename?: 'PluginQueries' }
      & { add: (
        { __typename?: 'CommonPluginQuery' }
        & Pick<CommonPluginQuery, 'name' | 'args' | 'subscription'>
      ) }
    ) }
  )> }
);

export type AddBookInfoMutationVariables = Exact<{
  name: Scalars['String'];
  genres: Array<Scalars['String']> | Scalars['String'];
}>;


export type AddBookInfoMutation = (
  { __typename?: 'Mutation' }
  & { add: (
    { __typename?: 'ResultWithInfoId' }
    & Pick<ResultWithInfoId, 'success' | 'code'>
  ) }
);

export type AddBookInfoHistoriesMutationVariables = Exact<{
  histories: Array<BookInfoHistory> | BookInfoHistory;
}>;


export type AddBookInfoHistoriesMutation = (
  { __typename?: 'Mutation' }
  & { add: (
    { __typename?: 'Result' }
    & Pick<Result, 'success' | 'code'>
  ) }
);

export type DeleteUnusedFoldersMutationVariables = Exact<{ [key: string]: never; }>;


export type DeleteUnusedFoldersMutation = (
  { __typename?: 'Mutation' }
  & { debug_deleteUnusedFolders: (
    { __typename?: 'Result' }
    & Pick<Result, 'success' | 'code'>
  ) }
);

export type FolderSizesQueryVariables = Exact<{ [key: string]: never; }>;


export type FolderSizesQuery = (
  { __typename?: 'Query' }
  & { sizes: (
    { __typename?: 'Debug_FolderSizes' }
    & Pick<Debug_FolderSizes, 'tmp' | 'cache' | 'book' | 'unusedBook' | 'bookInfoCount' | 'bookCount'>
  ) }
);

export type DeleteBookInfoMutationVariables = Exact<{
  id: Scalars['ID'];
}>;


export type DeleteBookInfoMutation = (
  { __typename?: 'Mutation' }
  & { del: (
    { __typename?: 'BookInfoResult' }
    & Pick<BookInfoResult, 'success' | 'code'>
    & { books: Array<(
      { __typename?: 'Book' }
      & Pick<Book, 'id' | 'pages'>
    )> }
  ) }
);

export type EditBookInfoMutationVariables = Exact<{
  id: Scalars['ID'];
  name?: Maybe<Scalars['String']>;
  genres: Array<Scalars['String']> | Scalars['String'];
}>;


export type EditBookInfoMutation = (
  { __typename?: 'Mutation' }
  & { edit: (
    { __typename?: 'Result' }
    & Pick<Result, 'success' | 'code'>
  ) }
);

export type DeleteBookMutationVariables = Exact<{
  id: Scalars['ID'];
}>;


export type DeleteBookMutation = (
  { __typename?: 'Mutation' }
  & { del: (
    { __typename?: 'Result' }
    & Pick<Result, 'success' | 'code'>
  ) }
);

export type EditBookMutationVariables = Exact<{
  id: Scalars['ID'];
  number?: Maybe<Scalars['String']>;
}>;


export type EditBookMutation = (
  { __typename?: 'Mutation' }
  & { edit: (
    { __typename?: 'Result' }
    & Pick<Result, 'success' | 'code'>
  ) }
);

export type DownloadBookInfosQueryVariables = Exact<{
  id: Scalars['ID'];
}>;


export type DownloadBookInfosQuery = (
  { __typename?: 'Query' }
  & { bookInfo?: Maybe<(
    { __typename?: 'BookInfo' }
    & Pick<BookInfo, 'id' | 'name' | 'count'>
    & { books: Array<(
      { __typename?: 'Book' }
      & Pick<Book, 'id' | 'number' | 'pages'>
    )> }
  )> }
);

export type BulkEditPagesMutationVariables = Exact<{
  bookId: Scalars['ID'];
  editActions: Array<EditAction> | EditAction;
}>;


export type BulkEditPagesMutation = (
  { __typename?: 'Mutation' }
  & { bulkEditPage: (
    { __typename?: 'Result' }
    & Pick<Result, 'success' | 'code' | 'message'>
  ) }
);

export type BookQueryVariables = Exact<{
  id: Scalars['ID'];
}>;


export type BookQuery = (
  { __typename?: 'Query' }
  & { book?: Maybe<(
    { __typename?: 'Book' }
    & Pick<Book, 'id' | 'number' | 'pages'>
    & { info?: Maybe<(
      { __typename?: 'BookInfo' }
      & Pick<BookInfo, 'id' | 'name'>
    )> }
  )> }
);

export type RelayBookInfosQueryVariables = Exact<{
  first?: Maybe<Scalars['Int']>;
  after?: Maybe<Scalars['String']>;
  option: BookInfosOption;
}>;


export type RelayBookInfosQuery = (
  { __typename?: 'Query' }
  & { bookInfos: (
    { __typename?: 'BookInfoPartialList' }
    & { edges: Array<(
      { __typename?: 'BookInfoEdge' }
      & Pick<BookInfoEdge, 'cursor'>
      & { node: (
        { __typename?: 'BookInfo' }
        & Pick<BookInfo, 'id' | 'name' | 'count' | 'history' | 'updatedAt'>
        & { thumbnail?: Maybe<(
          { __typename?: 'BookInfoThumbnail' }
          & Pick<BookInfoThumbnail, 'bookId' | 'pageIndex' | 'bookPageCount'>
        )>, genres: Array<(
          { __typename?: 'Genre' }
          & Pick<Genre, 'id' | 'name' | 'invisible'>
        )> }
      ) }
    )>, pageInfo: (
      { __typename?: 'PageInfo' }
      & Pick<PageInfo, 'hasNextPage' | 'hasPreviousPage' | 'startCursor' | 'endCursor'>
    ) }
  ) }
);

export type DeleteGenreMutationVariables = Exact<{
  name: Scalars['String'];
}>;


export type DeleteGenreMutation = (
  { __typename?: 'Mutation' }
  & { deleteGenre: (
    { __typename?: 'Result' }
    & Pick<Result, 'code' | 'success' | 'message'>
  ) }
);

export type EditGenreMutationVariables = Exact<{
  oldName: Scalars['String'];
  newName?: Maybe<Scalars['String']>;
  invisible?: Maybe<Scalars['Boolean']>;
}>;


export type EditGenreMutation = (
  { __typename?: 'Mutation' }
  & { editGenre: (
    { __typename?: 'Result' }
    & Pick<Result, 'code' | 'success' | 'message'>
  ) }
);

export type DeleteBooksMutationVariables = Exact<{
  infoId: Scalars['ID'];
  ids: Array<Scalars['ID']> | Scalars['ID'];
}>;


export type DeleteBooksMutation = (
  { __typename?: 'Mutation' }
  & { deleteBooks: (
    { __typename?: 'Result' }
    & Pick<Result, 'success' | 'code'>
  ) }
);

export type MoveBooksMutationVariables = Exact<{
  infoId: Scalars['ID'];
  ids: Array<Scalars['ID']> | Scalars['ID'];
}>;


export type MoveBooksMutation = (
  { __typename?: 'Mutation' }
  & { moveBooks: (
    { __typename?: 'Result' }
    & Pick<Result, 'success' | 'code'>
  ) }
);

export type EditBookInfoThumbnailMutationVariables = Exact<{
  id: Scalars['ID'];
  thumbnail?: Maybe<Scalars['ID']>;
}>;


export type EditBookInfoThumbnailMutation = (
  { __typename?: 'Mutation' }
  & { edit: (
    { __typename?: 'Result' }
    & Pick<Result, 'success' | 'code'>
  ) }
);

export type BookPagesQueryVariables = Exact<{
  id: Scalars['ID'];
}>;


export type BookPagesQuery = (
  { __typename?: 'Query' }
  & { book?: Maybe<(
    { __typename?: 'Book' }
    & Pick<Book, 'id' | 'pages'>
  )> }
);

export type EditBookThumbnailMutationVariables = Exact<{
  id: Scalars['ID'];
  th?: Maybe<Scalars['Int']>;
}>;


export type EditBookThumbnailMutation = (
  { __typename?: 'Mutation' }
  & { edit: (
    { __typename?: 'Result' }
    & Pick<Result, 'success' | 'code'>
  ) }
);

export type BookInfoQueryVariables = Exact<{
  id: Scalars['ID'];
  order?: Maybe<BookOrder>;
}>;


export type BookInfoQuery = (
  { __typename?: 'Query' }
  & { bookInfo?: Maybe<(
    { __typename?: 'BookInfo' }
    & Pick<BookInfo, 'id' | 'name'>
    & { books: Array<(
      { __typename?: 'Book' }
      & Pick<Book, 'id' | 'number' | 'pages' | 'thumbnail' | 'updatedAt'>
      & { info?: Maybe<(
        { __typename?: 'BookInfo' }
        & Pick<BookInfo, 'id'>
      )> }
    )> }
  )> }
);

export type GenresQueryVariables = Exact<{ [key: string]: never; }>;


export type GenresQuery = (
  { __typename?: 'Query' }
  & { genres: Array<(
    { __typename?: 'Genre' }
    & Pick<Genre, 'id' | 'name' | 'invisible'>
  )> }
);


export const AddBooksDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"addBooks"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"id"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"ID"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"books"}},"type":{"kind":"NonNullType","type":{"kind":"ListType","type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"InputBook"}}}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"adds"},"name":{"kind":"Name","value":"addBooks"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"id"},"value":{"kind":"Variable","name":{"kind":"Name","value":"id"}}},{"kind":"Argument","name":{"kind":"Name","value":"books"},"value":{"kind":"Variable","name":{"kind":"Name","value":"books"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"success"}},{"kind":"Field","name":{"kind":"Name","value":"code"}}]}}]}}]} as unknown as DocumentNode;
export type AddBooksMutationFn = Apollo.MutationFunction<AddBooksMutation, AddBooksMutationVariables>;
export function useAddBooksMutation(baseOptions?: Apollo.MutationHookOptions<AddBooksMutation, AddBooksMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<AddBooksMutation, AddBooksMutationVariables>(AddBooksDocument, options);
      }
export type AddBooksMutationHookResult = ReturnType<typeof useAddBooksMutation>;
export type AddBooksMutationResult = Apollo.MutationResult<AddBooksMutation>;
export type AddBooksMutationOptions = Apollo.BaseMutationOptions<AddBooksMutation, AddBooksMutationVariables>;
export const AddBooksProgressDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"subscription","name":{"kind":"Name","value":"addBooksProgress"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"id"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"ID"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"addBooks"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"id"},"value":{"kind":"Variable","name":{"kind":"Name","value":"id"}}}]}]}}]} as unknown as DocumentNode;
export function useAddBooksProgressSubscription(baseOptions: Apollo.SubscriptionHookOptions<AddBooksProgressSubscription, AddBooksProgressSubscriptionVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useSubscription<AddBooksProgressSubscription, AddBooksProgressSubscriptionVariables>(AddBooksProgressDocument, options);
      }
export type AddBooksProgressSubscriptionHookResult = ReturnType<typeof useAddBooksProgressSubscription>;
export type AddBooksProgressSubscriptionResult = Apollo.SubscriptionResult<AddBooksProgressSubscription>;
export const AddCompressBookDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"addCompressBook"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"id"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"ID"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"file"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"Upload"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"path"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"add"},"name":{"kind":"Name","value":"addCompressBook"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"id"},"value":{"kind":"Variable","name":{"kind":"Name","value":"id"}}},{"kind":"Argument","name":{"kind":"Name","value":"file"},"value":{"kind":"Variable","name":{"kind":"Name","value":"file"}}},{"kind":"Argument","name":{"kind":"Name","value":"path"},"value":{"kind":"Variable","name":{"kind":"Name","value":"path"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"success"}},{"kind":"Field","name":{"kind":"Name","value":"code"}}]}}]}}]} as unknown as DocumentNode;
export type AddCompressBookMutationFn = Apollo.MutationFunction<AddCompressBookMutation, AddCompressBookMutationVariables>;
export function useAddCompressBookMutation(baseOptions?: Apollo.MutationHookOptions<AddCompressBookMutation, AddCompressBookMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<AddCompressBookMutation, AddCompressBookMutationVariables>(AddCompressBookDocument, options);
      }
export type AddCompressBookMutationHookResult = ReturnType<typeof useAddCompressBookMutation>;
export type AddCompressBookMutationResult = Apollo.MutationResult<AddCompressBookMutation>;
export type AddCompressBookMutationOptions = Apollo.BaseMutationOptions<AddCompressBookMutation, AddCompressBookMutationVariables>;
export const PluginsDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"plugins"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"plugins"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"info"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}}]}},{"kind":"Field","name":{"kind":"Name","value":"queries"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"add"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"args"}},{"kind":"Field","name":{"kind":"Name","value":"subscription"}}]}}]}}]}}]}}]} as unknown as DocumentNode;
export function usePluginsQuery(baseOptions?: Apollo.QueryHookOptions<PluginsQuery, PluginsQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<PluginsQuery, PluginsQueryVariables>(PluginsDocument, options);
      }
export function usePluginsLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<PluginsQuery, PluginsQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<PluginsQuery, PluginsQueryVariables>(PluginsDocument, options);
        }
export type PluginsQueryHookResult = ReturnType<typeof usePluginsQuery>;
export type PluginsLazyQueryHookResult = ReturnType<typeof usePluginsLazyQuery>;
export type PluginsQueryResult = Apollo.QueryResult<PluginsQuery, PluginsQueryVariables>;
export const AddBookInfoDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"addBookInfo"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"name"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"genres"}},"type":{"kind":"NonNullType","type":{"kind":"ListType","type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"add"},"name":{"kind":"Name","value":"addBookInfo"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"name"},"value":{"kind":"Variable","name":{"kind":"Name","value":"name"}}},{"kind":"Argument","name":{"kind":"Name","value":"genres"},"value":{"kind":"Variable","name":{"kind":"Name","value":"genres"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"success"}},{"kind":"Field","name":{"kind":"Name","value":"code"}}]}}]}}]} as unknown as DocumentNode;
export type AddBookInfoMutationFn = Apollo.MutationFunction<AddBookInfoMutation, AddBookInfoMutationVariables>;
export function useAddBookInfoMutation(baseOptions?: Apollo.MutationHookOptions<AddBookInfoMutation, AddBookInfoMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<AddBookInfoMutation, AddBookInfoMutationVariables>(AddBookInfoDocument, options);
      }
export type AddBookInfoMutationHookResult = ReturnType<typeof useAddBookInfoMutation>;
export type AddBookInfoMutationResult = Apollo.MutationResult<AddBookInfoMutation>;
export type AddBookInfoMutationOptions = Apollo.BaseMutationOptions<AddBookInfoMutation, AddBookInfoMutationVariables>;
export const AddBookInfoHistoriesDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"addBookInfoHistories"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"histories"}},"type":{"kind":"NonNullType","type":{"kind":"ListType","type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"BookInfoHistory"}}}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"add"},"name":{"kind":"Name","value":"addBookInfoHistories"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"histories"},"value":{"kind":"Variable","name":{"kind":"Name","value":"histories"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"success"}},{"kind":"Field","name":{"kind":"Name","value":"code"}}]}}]}}]} as unknown as DocumentNode;
export type AddBookInfoHistoriesMutationFn = Apollo.MutationFunction<AddBookInfoHistoriesMutation, AddBookInfoHistoriesMutationVariables>;
export function useAddBookInfoHistoriesMutation(baseOptions?: Apollo.MutationHookOptions<AddBookInfoHistoriesMutation, AddBookInfoHistoriesMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<AddBookInfoHistoriesMutation, AddBookInfoHistoriesMutationVariables>(AddBookInfoHistoriesDocument, options);
      }
export type AddBookInfoHistoriesMutationHookResult = ReturnType<typeof useAddBookInfoHistoriesMutation>;
export type AddBookInfoHistoriesMutationResult = Apollo.MutationResult<AddBookInfoHistoriesMutation>;
export type AddBookInfoHistoriesMutationOptions = Apollo.BaseMutationOptions<AddBookInfoHistoriesMutation, AddBookInfoHistoriesMutationVariables>;
export const DeleteUnusedFoldersDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"deleteUnusedFolders"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"debug_deleteUnusedFolders"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"success"}},{"kind":"Field","name":{"kind":"Name","value":"code"}}]}}]}}]} as unknown as DocumentNode;
export type DeleteUnusedFoldersMutationFn = Apollo.MutationFunction<DeleteUnusedFoldersMutation, DeleteUnusedFoldersMutationVariables>;
export function useDeleteUnusedFoldersMutation(baseOptions?: Apollo.MutationHookOptions<DeleteUnusedFoldersMutation, DeleteUnusedFoldersMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<DeleteUnusedFoldersMutation, DeleteUnusedFoldersMutationVariables>(DeleteUnusedFoldersDocument, options);
      }
export type DeleteUnusedFoldersMutationHookResult = ReturnType<typeof useDeleteUnusedFoldersMutation>;
export type DeleteUnusedFoldersMutationResult = Apollo.MutationResult<DeleteUnusedFoldersMutation>;
export type DeleteUnusedFoldersMutationOptions = Apollo.BaseMutationOptions<DeleteUnusedFoldersMutation, DeleteUnusedFoldersMutationVariables>;
export const FolderSizesDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"folderSizes"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"sizes"},"name":{"kind":"Name","value":"debug_folderSize"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"tmp"}},{"kind":"Field","name":{"kind":"Name","value":"cache"}},{"kind":"Field","name":{"kind":"Name","value":"book"}},{"kind":"Field","name":{"kind":"Name","value":"unusedBook"}},{"kind":"Field","name":{"kind":"Name","value":"bookInfoCount"}},{"kind":"Field","name":{"kind":"Name","value":"bookCount"}}]}}]}}]} as unknown as DocumentNode;
export function useFolderSizesQuery(baseOptions?: Apollo.QueryHookOptions<FolderSizesQuery, FolderSizesQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FolderSizesQuery, FolderSizesQueryVariables>(FolderSizesDocument, options);
      }
export function useFolderSizesLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FolderSizesQuery, FolderSizesQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FolderSizesQuery, FolderSizesQueryVariables>(FolderSizesDocument, options);
        }
export type FolderSizesQueryHookResult = ReturnType<typeof useFolderSizesQuery>;
export type FolderSizesLazyQueryHookResult = ReturnType<typeof useFolderSizesLazyQuery>;
export type FolderSizesQueryResult = Apollo.QueryResult<FolderSizesQuery, FolderSizesQueryVariables>;
export const DeleteBookInfoDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"deleteBookInfo"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"id"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"ID"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"del"},"name":{"kind":"Name","value":"deleteBookInfo"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"id"},"value":{"kind":"Variable","name":{"kind":"Name","value":"id"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"success"}},{"kind":"Field","name":{"kind":"Name","value":"code"}},{"kind":"Field","name":{"kind":"Name","value":"books"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"pages"}}]}}]}}]}}]} as unknown as DocumentNode;
export type DeleteBookInfoMutationFn = Apollo.MutationFunction<DeleteBookInfoMutation, DeleteBookInfoMutationVariables>;
export function useDeleteBookInfoMutation(baseOptions?: Apollo.MutationHookOptions<DeleteBookInfoMutation, DeleteBookInfoMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<DeleteBookInfoMutation, DeleteBookInfoMutationVariables>(DeleteBookInfoDocument, options);
      }
export type DeleteBookInfoMutationHookResult = ReturnType<typeof useDeleteBookInfoMutation>;
export type DeleteBookInfoMutationResult = Apollo.MutationResult<DeleteBookInfoMutation>;
export type DeleteBookInfoMutationOptions = Apollo.BaseMutationOptions<DeleteBookInfoMutation, DeleteBookInfoMutationVariables>;
export const EditBookInfoDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"editBookInfo"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"id"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"ID"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"name"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"genres"}},"type":{"kind":"NonNullType","type":{"kind":"ListType","type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"edit"},"name":{"kind":"Name","value":"editBookInfo"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"id"},"value":{"kind":"Variable","name":{"kind":"Name","value":"id"}}},{"kind":"Argument","name":{"kind":"Name","value":"name"},"value":{"kind":"Variable","name":{"kind":"Name","value":"name"}}},{"kind":"Argument","name":{"kind":"Name","value":"genres"},"value":{"kind":"Variable","name":{"kind":"Name","value":"genres"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"success"}},{"kind":"Field","name":{"kind":"Name","value":"code"}}]}}]}}]} as unknown as DocumentNode;
export type EditBookInfoMutationFn = Apollo.MutationFunction<EditBookInfoMutation, EditBookInfoMutationVariables>;
export function useEditBookInfoMutation(baseOptions?: Apollo.MutationHookOptions<EditBookInfoMutation, EditBookInfoMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<EditBookInfoMutation, EditBookInfoMutationVariables>(EditBookInfoDocument, options);
      }
export type EditBookInfoMutationHookResult = ReturnType<typeof useEditBookInfoMutation>;
export type EditBookInfoMutationResult = Apollo.MutationResult<EditBookInfoMutation>;
export type EditBookInfoMutationOptions = Apollo.BaseMutationOptions<EditBookInfoMutation, EditBookInfoMutationVariables>;
export const DeleteBookDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"deleteBook"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"id"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"ID"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"del"},"name":{"kind":"Name","value":"deleteBook"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"id"},"value":{"kind":"Variable","name":{"kind":"Name","value":"id"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"success"}},{"kind":"Field","name":{"kind":"Name","value":"code"}}]}}]}}]} as unknown as DocumentNode;
export type DeleteBookMutationFn = Apollo.MutationFunction<DeleteBookMutation, DeleteBookMutationVariables>;
export function useDeleteBookMutation(baseOptions?: Apollo.MutationHookOptions<DeleteBookMutation, DeleteBookMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<DeleteBookMutation, DeleteBookMutationVariables>(DeleteBookDocument, options);
      }
export type DeleteBookMutationHookResult = ReturnType<typeof useDeleteBookMutation>;
export type DeleteBookMutationResult = Apollo.MutationResult<DeleteBookMutation>;
export type DeleteBookMutationOptions = Apollo.BaseMutationOptions<DeleteBookMutation, DeleteBookMutationVariables>;
export const EditBookDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"editBook"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"id"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"ID"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"number"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"edit"},"name":{"kind":"Name","value":"editBook"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"id"},"value":{"kind":"Variable","name":{"kind":"Name","value":"id"}}},{"kind":"Argument","name":{"kind":"Name","value":"number"},"value":{"kind":"Variable","name":{"kind":"Name","value":"number"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"success"}},{"kind":"Field","name":{"kind":"Name","value":"code"}}]}}]}}]} as unknown as DocumentNode;
export type EditBookMutationFn = Apollo.MutationFunction<EditBookMutation, EditBookMutationVariables>;
export function useEditBookMutation(baseOptions?: Apollo.MutationHookOptions<EditBookMutation, EditBookMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<EditBookMutation, EditBookMutationVariables>(EditBookDocument, options);
      }
export type EditBookMutationHookResult = ReturnType<typeof useEditBookMutation>;
export type EditBookMutationResult = Apollo.MutationResult<EditBookMutation>;
export type EditBookMutationOptions = Apollo.BaseMutationOptions<EditBookMutation, EditBookMutationVariables>;
export const DownloadBookInfosDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"downloadBookInfos"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"id"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"ID"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"bookInfo"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"id"},"value":{"kind":"Variable","name":{"kind":"Name","value":"id"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"count"}},{"kind":"Field","name":{"kind":"Name","value":"books"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"number"}},{"kind":"Field","name":{"kind":"Name","value":"pages"}}]}}]}}]}}]} as unknown as DocumentNode;
export function useDownloadBookInfosQuery(baseOptions: Apollo.QueryHookOptions<DownloadBookInfosQuery, DownloadBookInfosQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<DownloadBookInfosQuery, DownloadBookInfosQueryVariables>(DownloadBookInfosDocument, options);
      }
export function useDownloadBookInfosLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<DownloadBookInfosQuery, DownloadBookInfosQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<DownloadBookInfosQuery, DownloadBookInfosQueryVariables>(DownloadBookInfosDocument, options);
        }
export type DownloadBookInfosQueryHookResult = ReturnType<typeof useDownloadBookInfosQuery>;
export type DownloadBookInfosLazyQueryHookResult = ReturnType<typeof useDownloadBookInfosLazyQuery>;
export type DownloadBookInfosQueryResult = Apollo.QueryResult<DownloadBookInfosQuery, DownloadBookInfosQueryVariables>;
export const BulkEditPagesDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"bulkEditPages"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"bookId"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"ID"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"editActions"}},"type":{"kind":"NonNullType","type":{"kind":"ListType","type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"EditAction"}}}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"bulkEditPage"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"id"},"value":{"kind":"Variable","name":{"kind":"Name","value":"bookId"}}},{"kind":"Argument","name":{"kind":"Name","value":"actions"},"value":{"kind":"Variable","name":{"kind":"Name","value":"editActions"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"success"}},{"kind":"Field","name":{"kind":"Name","value":"code"}},{"kind":"Field","name":{"kind":"Name","value":"message"}}]}}]}}]} as unknown as DocumentNode;
export type BulkEditPagesMutationFn = Apollo.MutationFunction<BulkEditPagesMutation, BulkEditPagesMutationVariables>;
export function useBulkEditPagesMutation(baseOptions?: Apollo.MutationHookOptions<BulkEditPagesMutation, BulkEditPagesMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<BulkEditPagesMutation, BulkEditPagesMutationVariables>(BulkEditPagesDocument, options);
      }
export type BulkEditPagesMutationHookResult = ReturnType<typeof useBulkEditPagesMutation>;
export type BulkEditPagesMutationResult = Apollo.MutationResult<BulkEditPagesMutation>;
export type BulkEditPagesMutationOptions = Apollo.BaseMutationOptions<BulkEditPagesMutation, BulkEditPagesMutationVariables>;
export const BookDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"book"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"id"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"ID"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"book"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"id"},"value":{"kind":"Variable","name":{"kind":"Name","value":"id"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"number"}},{"kind":"Field","name":{"kind":"Name","value":"pages"}},{"kind":"Field","name":{"kind":"Name","value":"info"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}}]}}]}}]}}]} as unknown as DocumentNode;
export function useBookQuery(baseOptions: Apollo.QueryHookOptions<BookQuery, BookQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<BookQuery, BookQueryVariables>(BookDocument, options);
      }
export function useBookLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<BookQuery, BookQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<BookQuery, BookQueryVariables>(BookDocument, options);
        }
export type BookQueryHookResult = ReturnType<typeof useBookQuery>;
export type BookLazyQueryHookResult = ReturnType<typeof useBookLazyQuery>;
export type BookQueryResult = Apollo.QueryResult<BookQuery, BookQueryVariables>;
export const RelayBookInfosDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"relayBookInfos"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"first"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"after"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"option"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"BookInfosOption"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"bookInfos"},"name":{"kind":"Name","value":"relayBookInfos"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"first"},"value":{"kind":"Variable","name":{"kind":"Name","value":"first"}}},{"kind":"Argument","name":{"kind":"Name","value":"after"},"value":{"kind":"Variable","name":{"kind":"Name","value":"after"}}},{"kind":"Argument","name":{"kind":"Name","value":"option"},"value":{"kind":"Variable","name":{"kind":"Name","value":"option"}}}],"directives":[{"kind":"Directive","name":{"kind":"Name","value":"connection"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"key"},"value":{"kind":"StringValue","value":"relayBookInfos","block":false}},{"kind":"Argument","name":{"kind":"Name","value":"filter"},"value":{"kind":"ListValue","values":[{"kind":"StringValue","value":"option","block":false}]}}]}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"edges"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"cursor"}},{"kind":"Field","name":{"kind":"Name","value":"node"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"count"}},{"kind":"Field","name":{"kind":"Name","value":"thumbnail"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"bookId"}},{"kind":"Field","name":{"kind":"Name","value":"pageIndex"}},{"kind":"Field","name":{"kind":"Name","value":"bookPageCount"}}]}},{"kind":"Field","name":{"kind":"Name","value":"history"}},{"kind":"Field","name":{"kind":"Name","value":"genres"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"invisible"}}]}},{"kind":"Field","name":{"kind":"Name","value":"updatedAt"}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"pageInfo"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"hasNextPage"}},{"kind":"Field","name":{"kind":"Name","value":"hasPreviousPage"}},{"kind":"Field","name":{"kind":"Name","value":"startCursor"}},{"kind":"Field","name":{"kind":"Name","value":"endCursor"}}]}}]}}]}}]} as unknown as DocumentNode;
export function useRelayBookInfosQuery(baseOptions: Apollo.QueryHookOptions<RelayBookInfosQuery, RelayBookInfosQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<RelayBookInfosQuery, RelayBookInfosQueryVariables>(RelayBookInfosDocument, options);
      }
export function useRelayBookInfosLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<RelayBookInfosQuery, RelayBookInfosQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<RelayBookInfosQuery, RelayBookInfosQueryVariables>(RelayBookInfosDocument, options);
        }
export type RelayBookInfosQueryHookResult = ReturnType<typeof useRelayBookInfosQuery>;
export type RelayBookInfosLazyQueryHookResult = ReturnType<typeof useRelayBookInfosLazyQuery>;
export type RelayBookInfosQueryResult = Apollo.QueryResult<RelayBookInfosQuery, RelayBookInfosQueryVariables>;
export const DeleteGenreDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"DeleteGenre"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"name"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"deleteGenre"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"genre"},"value":{"kind":"Variable","name":{"kind":"Name","value":"name"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"code"}},{"kind":"Field","name":{"kind":"Name","value":"success"}},{"kind":"Field","name":{"kind":"Name","value":"message"}}]}}]}}]} as unknown as DocumentNode;
export type DeleteGenreMutationFn = Apollo.MutationFunction<DeleteGenreMutation, DeleteGenreMutationVariables>;
export function useDeleteGenreMutation(baseOptions?: Apollo.MutationHookOptions<DeleteGenreMutation, DeleteGenreMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<DeleteGenreMutation, DeleteGenreMutationVariables>(DeleteGenreDocument, options);
      }
export type DeleteGenreMutationHookResult = ReturnType<typeof useDeleteGenreMutation>;
export type DeleteGenreMutationResult = Apollo.MutationResult<DeleteGenreMutation>;
export type DeleteGenreMutationOptions = Apollo.BaseMutationOptions<DeleteGenreMutation, DeleteGenreMutationVariables>;
export const EditGenreDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"EditGenre"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"oldName"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"newName"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"invisible"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"Boolean"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"editGenre"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"oldName"},"value":{"kind":"Variable","name":{"kind":"Name","value":"oldName"}}},{"kind":"Argument","name":{"kind":"Name","value":"newName"},"value":{"kind":"Variable","name":{"kind":"Name","value":"newName"}}},{"kind":"Argument","name":{"kind":"Name","value":"invisible"},"value":{"kind":"Variable","name":{"kind":"Name","value":"invisible"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"code"}},{"kind":"Field","name":{"kind":"Name","value":"success"}},{"kind":"Field","name":{"kind":"Name","value":"message"}}]}}]}}]} as unknown as DocumentNode;
export type EditGenreMutationFn = Apollo.MutationFunction<EditGenreMutation, EditGenreMutationVariables>;
export function useEditGenreMutation(baseOptions?: Apollo.MutationHookOptions<EditGenreMutation, EditGenreMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<EditGenreMutation, EditGenreMutationVariables>(EditGenreDocument, options);
      }
export type EditGenreMutationHookResult = ReturnType<typeof useEditGenreMutation>;
export type EditGenreMutationResult = Apollo.MutationResult<EditGenreMutation>;
export type EditGenreMutationOptions = Apollo.BaseMutationOptions<EditGenreMutation, EditGenreMutationVariables>;
export const DeleteBooksDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"deleteBooks"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"infoId"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"ID"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"ids"}},"type":{"kind":"NonNullType","type":{"kind":"ListType","type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"ID"}}}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"deleteBooks"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"infoId"},"value":{"kind":"Variable","name":{"kind":"Name","value":"infoId"}}},{"kind":"Argument","name":{"kind":"Name","value":"ids"},"value":{"kind":"Variable","name":{"kind":"Name","value":"ids"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"success"}},{"kind":"Field","name":{"kind":"Name","value":"code"}}]}}]}}]} as unknown as DocumentNode;
export type DeleteBooksMutationFn = Apollo.MutationFunction<DeleteBooksMutation, DeleteBooksMutationVariables>;
export function useDeleteBooksMutation(baseOptions?: Apollo.MutationHookOptions<DeleteBooksMutation, DeleteBooksMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<DeleteBooksMutation, DeleteBooksMutationVariables>(DeleteBooksDocument, options);
      }
export type DeleteBooksMutationHookResult = ReturnType<typeof useDeleteBooksMutation>;
export type DeleteBooksMutationResult = Apollo.MutationResult<DeleteBooksMutation>;
export type DeleteBooksMutationOptions = Apollo.BaseMutationOptions<DeleteBooksMutation, DeleteBooksMutationVariables>;
export const MoveBooksDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"moveBooks"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"infoId"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"ID"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"ids"}},"type":{"kind":"NonNullType","type":{"kind":"ListType","type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"ID"}}}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"moveBooks"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"infoId"},"value":{"kind":"Variable","name":{"kind":"Name","value":"infoId"}}},{"kind":"Argument","name":{"kind":"Name","value":"ids"},"value":{"kind":"Variable","name":{"kind":"Name","value":"ids"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"success"}},{"kind":"Field","name":{"kind":"Name","value":"code"}}]}}]}}]} as unknown as DocumentNode;
export type MoveBooksMutationFn = Apollo.MutationFunction<MoveBooksMutation, MoveBooksMutationVariables>;
export function useMoveBooksMutation(baseOptions?: Apollo.MutationHookOptions<MoveBooksMutation, MoveBooksMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<MoveBooksMutation, MoveBooksMutationVariables>(MoveBooksDocument, options);
      }
export type MoveBooksMutationHookResult = ReturnType<typeof useMoveBooksMutation>;
export type MoveBooksMutationResult = Apollo.MutationResult<MoveBooksMutation>;
export type MoveBooksMutationOptions = Apollo.BaseMutationOptions<MoveBooksMutation, MoveBooksMutationVariables>;
export const EditBookInfoThumbnailDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"editBookInfoThumbnail"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"id"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"ID"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"thumbnail"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"ID"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"edit"},"name":{"kind":"Name","value":"editBookInfo"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"id"},"value":{"kind":"Variable","name":{"kind":"Name","value":"id"}}},{"kind":"Argument","name":{"kind":"Name","value":"thumbnail"},"value":{"kind":"Variable","name":{"kind":"Name","value":"thumbnail"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"success"}},{"kind":"Field","name":{"kind":"Name","value":"code"}}]}}]}}]} as unknown as DocumentNode;
export type EditBookInfoThumbnailMutationFn = Apollo.MutationFunction<EditBookInfoThumbnailMutation, EditBookInfoThumbnailMutationVariables>;
export function useEditBookInfoThumbnailMutation(baseOptions?: Apollo.MutationHookOptions<EditBookInfoThumbnailMutation, EditBookInfoThumbnailMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<EditBookInfoThumbnailMutation, EditBookInfoThumbnailMutationVariables>(EditBookInfoThumbnailDocument, options);
      }
export type EditBookInfoThumbnailMutationHookResult = ReturnType<typeof useEditBookInfoThumbnailMutation>;
export type EditBookInfoThumbnailMutationResult = Apollo.MutationResult<EditBookInfoThumbnailMutation>;
export type EditBookInfoThumbnailMutationOptions = Apollo.BaseMutationOptions<EditBookInfoThumbnailMutation, EditBookInfoThumbnailMutationVariables>;
export const BookPagesDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"bookPages"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"id"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"ID"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"book"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"id"},"value":{"kind":"Variable","name":{"kind":"Name","value":"id"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"pages"}}]}}]}}]} as unknown as DocumentNode;
export function useBookPagesQuery(baseOptions: Apollo.QueryHookOptions<BookPagesQuery, BookPagesQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<BookPagesQuery, BookPagesQueryVariables>(BookPagesDocument, options);
      }
export function useBookPagesLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<BookPagesQuery, BookPagesQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<BookPagesQuery, BookPagesQueryVariables>(BookPagesDocument, options);
        }
export type BookPagesQueryHookResult = ReturnType<typeof useBookPagesQuery>;
export type BookPagesLazyQueryHookResult = ReturnType<typeof useBookPagesLazyQuery>;
export type BookPagesQueryResult = Apollo.QueryResult<BookPagesQuery, BookPagesQueryVariables>;
export const EditBookThumbnailDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"editBookThumbnail"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"id"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"ID"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"th"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"edit"},"name":{"kind":"Name","value":"editBook"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"id"},"value":{"kind":"Variable","name":{"kind":"Name","value":"id"}}},{"kind":"Argument","name":{"kind":"Name","value":"thumbnail"},"value":{"kind":"Variable","name":{"kind":"Name","value":"th"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"success"}},{"kind":"Field","name":{"kind":"Name","value":"code"}}]}}]}}]} as unknown as DocumentNode;
export type EditBookThumbnailMutationFn = Apollo.MutationFunction<EditBookThumbnailMutation, EditBookThumbnailMutationVariables>;
export function useEditBookThumbnailMutation(baseOptions?: Apollo.MutationHookOptions<EditBookThumbnailMutation, EditBookThumbnailMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<EditBookThumbnailMutation, EditBookThumbnailMutationVariables>(EditBookThumbnailDocument, options);
      }
export type EditBookThumbnailMutationHookResult = ReturnType<typeof useEditBookThumbnailMutation>;
export type EditBookThumbnailMutationResult = Apollo.MutationResult<EditBookThumbnailMutation>;
export type EditBookThumbnailMutationOptions = Apollo.BaseMutationOptions<EditBookThumbnailMutation, EditBookThumbnailMutationVariables>;
export const BookInfoDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"bookInfo"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"id"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"ID"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"order"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"BookOrder"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"bookInfo"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"id"},"value":{"kind":"Variable","name":{"kind":"Name","value":"id"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"books"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"order"},"value":{"kind":"Variable","name":{"kind":"Name","value":"order"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"number"}},{"kind":"Field","name":{"kind":"Name","value":"pages"}},{"kind":"Field","name":{"kind":"Name","value":"thumbnail"}},{"kind":"Field","name":{"kind":"Name","value":"updatedAt"}},{"kind":"Field","name":{"kind":"Name","value":"info"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}}]}}]}}]}}]}}]} as unknown as DocumentNode;
export function useBookInfoQuery(baseOptions: Apollo.QueryHookOptions<BookInfoQuery, BookInfoQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<BookInfoQuery, BookInfoQueryVariables>(BookInfoDocument, options);
      }
export function useBookInfoLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<BookInfoQuery, BookInfoQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<BookInfoQuery, BookInfoQueryVariables>(BookInfoDocument, options);
        }
export type BookInfoQueryHookResult = ReturnType<typeof useBookInfoQuery>;
export type BookInfoLazyQueryHookResult = ReturnType<typeof useBookInfoLazyQuery>;
export type BookInfoQueryResult = Apollo.QueryResult<BookInfoQuery, BookInfoQueryVariables>;
export const GenresDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"genres"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"genres"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"invisible"}}]}}]}}]} as unknown as DocumentNode;
export function useGenresQuery(baseOptions?: Apollo.QueryHookOptions<GenresQuery, GenresQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<GenresQuery, GenresQueryVariables>(GenresDocument, options);
      }
export function useGenresLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<GenresQuery, GenresQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<GenresQuery, GenresQueryVariables>(GenresDocument, options);
        }
export type GenresQueryHookResult = ReturnType<typeof useGenresQuery>;
export type GenresLazyQueryHookResult = ReturnType<typeof useGenresLazyQuery>;
export type GenresQueryResult = Apollo.QueryResult<GenresQuery, GenresQueryVariables>;