scalar Upload

type Query {
    bookInfos(limit: Int = 10): [BookInfo!]!
    bookInfo(infoId: ID!): BookInfo
    books(infoId: ID, limit: Int = 10): [Book!]!
    book(bookId: ID!): Book
}

type Mutation {
    ## BookInfo
    addBookInfo(name: String!, thumbnail: Upload): Result!
    editBookInfo(infoId: ID!, name: String, thumbnail: String): Result!
    deleteBookInfo(infoId: ID!): Result!

    ## Book
    addBook(infoId: ID!, number: String!, file: Upload!): Result!
    addBooks(infoId: ID!, books: [InputBook!]!): [Result!]!
    editBook(bookId: ID!, number: String, thumbnail: String): Result!
    deleteBook(bookId: ID!): Result!
}

type BookInfo {
    infoId: ID!
    name: String!
    thumbnail: String
    count: Int!

    books: [Book!]!
}

type SimpleBookInfo {
    infoId: ID!
    name: String!
    thumbnail: String
    count: Int!
}

type Book {
    bookId: ID!
    thumbnail: String
    number: String!
    pages: Int!

    # infoId: ID!
    info: SimpleBookInfo!
}

type Result {
    success: Boolean!
    code: String
    message: String
}

input InputBook {
    number: String!
    file: Upload!
}
