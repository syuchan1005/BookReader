# /etc/nginx/nginx.conf

# user nginx;
worker_processes auto;

error_log /var/log/nginx/error.log warn;
pid       /var/run/nginx.pid;

events {
    worker_connections 1024;
}

http {
    server_tokens off;
    add_header X-Content-Type-Options nosniff;

    include      /etc/nginx/mime.types;
    default_type applciation/octet-stream;

    log_format main '$remote_addr - $remote_user [$time_local],"$request" '
                    '$status $body_bytes_sent "$http_referer"'
                    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;

    sendfile     on;
    tcp_nopush  on;
    tcp_nodelay on;

    gzip on;
    gzip_min_length 1024;
    gzip_buffers 40 5k;
    gzip_comp_level 5;
    gzip_http_version 1.0;
    gzip_vary on;
    gzip_proxied any;
    gzip_types text/plain
               text/css
               text/javascript
               text/xml
               application/xml
               application/rss+xml
               application/json
               application/javascript
               application/x-javascript
               application/font-woff2
               application/font-woff
               application/font-tff;

    reset_timedout_connection on;

    charset utf-8;

    proxy_read_timeout 15m;
    proxy_send_timeout 15m;
    proxy_request_buffering off;

    server {
        listen 80;
        client_max_body_size 10G;

        location ~* /image$ {
            proxy_set_header    Host    $host;
            proxy_set_header    X-Real-IP    $remote_addr;
            proxy_set_header    X-Forwarded-Host       $host;
            proxy_set_header    X-Forwarded-Server    $host;
            proxy_set_header    X-Forwarded-For    $proxy_add_x_forwarded_for;

            proxy_pass http://localhost:8081;
        }

        location /graphql {
            proxy_set_header    Host    $host;
            proxy_set_header    X-Real-IP    $remote_addr;
            proxy_set_header    X-Forwarded-Host       $host;
            proxy_set_header    X-Forwarded-Server    $host;
            proxy_set_header    X-Forwarded-For    $proxy_add_x_forwarded_for;

            # ----websocket----
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            # ----end websocket----

            proxy_pass http://localhost:8081;
        }

        location ~* ^/book/.+\.(jpg|webp)$ {
            root /bookReader/storage;
            try_files /cache/$uri $uri @backend;
            expires 1y;
            access_log off;
        }

        location / {
            root /bookReader/public;
            try_files $uri $uri/ /index.html =404;
            expires 1y;
            access_log off;
        }

        location @backend {
            proxy_set_header    Host    $host;
            proxy_set_header    X-Real-IP    $remote_addr;
            proxy_set_header    X-Forwarded-Host       $host;
            proxy_set_header    X-Forwarded-Server    $host;
            proxy_set_header    X-Forwarded-For    $proxy_add_x_forwarded_for;
            proxy_pass http://localhost:8081;
        }
    }
}
